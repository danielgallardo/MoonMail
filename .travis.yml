language: node_js
sudo: required
node_js:
- '8.10'
before_install: # if "install" is overridden
  # Repo for Yarn
  - sudo apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg
  - echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq yarn
  - yarn install
  - source .ci/detect-changed-services.sh && detect_changed_services
  - echo $changed_services
env:
  global:
    - ES_VERSION=6.0.0
    - ES_DOWNLOAD_URL=https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ES_VERSION}.tar.gz

jobs:
  include:
    - stage: test
      script:
      - for service in $changed_services
        do
          echo "-------------------Running tests for $service---------------------"
          cd $service
          yarn install && yarn test
          if [[ $service == "lists-microservice" ]]; then
            wget ${ES_DOWNLOAD_URL}
            tar -xzf elasticsearch-${ES_VERSION}.tar.gz
            ./elasticsearch-${ES_VERSION}/bin/elasticsearch &
            wget -q --waitretry=3 --retry-connrefused -T 10 -O - http://127.0.0.1:9200
            yarn run test:integration
            #if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then
              # yarn run test:system
            #fi
          fi
          cd ..
        done
        
    - stage: staging-deploy
      script:
      - auto_deployable_services="support/events-router,"
      - if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then
          for service in $changed_services
          do
            echo "-------------------Running packaging for $service---------------------"
            if [[ $auto_deployable_services = *"$service"* ]]; then
              cd $service && yarn deploy; cd ..
            fi
          done
        fi

    - stage: prod-deploy
      script:
      - auto_deployable_services="support/events-router,"
      - if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then
          for service in $changed_services
          do
            echo "-------------------Running packaging for $service---------------------"
            if [[ $auto_deployable_services = *"$service"* ]]; then
              cd $service && yarn deploy:prod; cd ..
            fi
          done
        fi

stages:
  - test
  - name: staging-deploy
    if: branch = master
  - name: prod-deploy
    if: branch = release

cache:
  yarn: true
  directories:
  - "$(npm config get prefix)/lib/node_modules"
  - node_modules
  - events/node_modules
  - api/node_modules
  - private/node_modules
  - extensions/node_modules
  - template-marketplace/node_modules
  - lists-microservice/node_modules
  - emails-microservice/node_modules
  - campaigns-microservice/node_modules
  - support/events-router/node_modules
